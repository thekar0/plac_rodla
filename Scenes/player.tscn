[gd_scene load_steps=4 format=3 uid="uid://djwahpg8q4cbv"]

[sub_resource type="GDScript" id="GDScript_xhllg"]
script/source = "extends CharacterBody3D

const MAX_SPEED_GROUND = 8.0
const MAX_SPEED_AIR = 20.0
const GROUND_ACCEL = 35
const AIR_ACCEL = 30
const FRICTION = 15
const JUMP_VELOCITY = 4.0
const GRAVITY = 9

var sensitivity = 0.003

@onready var camera_pivot = $camera_pivot
@onready var camera = $camera_pivot/camera

func _ready() -> void:
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		camera_pivot.rotate_y(-event.relative.x * sensitivity)
		camera.rotate_x(-event.relative.y * sensitivity)
		camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-90), deg_to_rad(100))

func _physics_process(delta: float) -> void:
	basicMovement(delta)
	move_and_slide()

func basicMovement(delta):
	var wishdir = Input.get_vector(\"left\", \"right\", \"forward\", \"backward\")
	var direction = (camera_pivot.basis * Vector3(wishdir.x, 0, wishdir.y)).normalized()
	
	if is_on_floor():
		velocity = accelerate(direction, delta, GROUND_ACCEL, MAX_SPEED_GROUND)
	
		var speed = velocity.length()
		if speed != 0:
			var drop = speed * FRICTION * delta
			velocity *= max(speed - drop, 0) / speed
	
		if Input.is_action_pressed(\"jump\"):
			velocity.y = JUMP_VELOCITY
		else:
			velocity = accelerate(direction, delta, AIR_ACCEL, MAX_SPEED_AIR)
			velocity.y -= GRAVITY * delta
	else:
		velocity += get_gravity() * delta
		
func accelerate(direction, delta, ACCEL_TYPE, MAX_SPEED):
	var proj_vel = velocity.dot(direction)
	var accel_vel = ACCEL_TYPE * delta
	
	if (proj_vel + accel_vel > MAX_SPEED):
		accel_vel = MAX_SPEED - proj_vel
	
	return velocity + (direction * accel_vel)
	

	
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_meqbe"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_c2q5t"]

[node name="player" type="CharacterBody3D"]
script = SubResource("GDScript_xhllg")

[node name="player_mesh" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_meqbe")

[node name="player_collision" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_c2q5t")

[node name="camera_pivot" type="Node3D" parent="."]

[node name="camera" type="Camera3D" parent="camera_pivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
